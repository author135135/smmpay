# -*- coding: utf-8 -*-
# Generated by Django 1.11.26 on 2019-12-31 08:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smmpay.apps.advert.helpers
import smmpay.apps.advert.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('advert_type', models.CharField(choices=[('social_account', 'Social account')], default='social_account', max_length=25, verbose_name='type of advert')),
                ('min_price', models.PositiveIntegerField(verbose_name='Minimum price')),
                ('max_price', models.PositiveIntegerField(verbose_name='Maximum price')),
                ('views', models.PositiveIntegerField(default=0, editable=False, verbose_name='count of views')),
                ('enabled_by_author', models.BooleanField(default=True, verbose_name='enabled by author')),
                ('status', models.CharField(choices=[('published', 'Published'), ('moderation', 'Moderation'), ('violation', 'Violation')], default='moderation', max_length=25, verbose_name='status')),
                ('special_status', models.SmallIntegerField(blank=True, default=0, verbose_name='special status')),
                ('special_status_start', models.DateTimeField(blank=True, null=True, verbose_name='special status start')),
                ('special_status_end', models.DateTimeField(blank=True, null=True, verbose_name='special status end')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adverts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'ordering': ('-pk',),
                'db_table': 'advert_advert',
                'verbose_name_plural': 'adverts',
                'verbose_name': 'advert',
            },
        ),
        migrations.CreateModel(
            name='AdvertSocialAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to=smmpay.apps.advert.helpers.RenameFile('offer/social_accounts/%Y/%m/%d'), verbose_name='logo')),
                ('link', models.URLField(unique=True, validators=[smmpay.apps.advert.models.validate_social_network_link], verbose_name='account link')),
                ('subscribers', models.PositiveIntegerField(verbose_name='subscribers')),
                ('confirmed', models.BooleanField(default=False, verbose_name='confirmed by author')),
                ('confirmation_code', models.TextField(verbose_name='confirmation code')),
                ('advert', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_account', to='advert.Advert', verbose_name='advert')),
            ],
            options={
                'verbose_name': 'advert social account',
                'verbose_name_plural': 'advert social accounts',
                'db_table': 'advert_advert_social_account',
            },
        ),
        migrations.CreateModel(
            name='AdvertSocialAccountService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='price')),
                ('negotiated_price', models.BooleanField(default=False, verbose_name='negotiated price')),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_account_services', to='advert.AdvertSocialAccount', verbose_name='advert')),
            ],
            options={
                'verbose_name': 'advert social account service',
                'verbose_name_plural': 'advert social account services',
                'db_table': 'advert_social_account_service',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='AdvertViewsStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('advert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views_statistic', to='advert.Advert')),
            ],
            options={
                'db_table': 'advert_advert_views_statistic',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'ordering': ('title',),
                'db_table': 'advert_category',
                'verbose_name_plural': 'categories',
                'verbose_name': 'category',
            },
        ),
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('pages', models.TextField(help_text='Url patterns of pages where you would like to see block, each address on new line', verbose_name='pages')),
                ('position', models.CharField(choices=[('sidebar', 'Sidebar'), ('header_menu', 'Header menu'), ('footer_menu', 'Footer menu')], help_text='Position on site where block will be rendered', max_length=50, verbose_name='position')),
                ('content', models.TextField(blank=True, default='', verbose_name='block content')),
                ('context_function', models.CharField(blank=True, default='', help_text='Python function that will handle block context before render', max_length=100, verbose_name='context function')),
                ('template_name', models.CharField(blank=True, default='', help_text='In case field empty, default template advert/tags/content_block/`position`_default.html will be used', max_length=255, verbose_name='template name')),
                ('enabled', models.BooleanField(default=True, verbose_name='enabled')),
            ],
            options={
                'verbose_name': 'content block',
                'verbose_name_plural': 'content blocks',
                'db_table': 'advert_content_block',
            },
        ),
        migrations.CreateModel(
            name='FavoriteAdvert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('advert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_adverts', to='advert.Advert', verbose_name='advert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_adverts', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'favorite',
                'verbose_name_plural': 'favorites',
                'db_table': 'advert_favorite_advert',
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('position', models.CharField(choices=[('top_menu', 'Top menu'), ('bottom_menu', 'Bottom menu')], max_length=32, verbose_name='menu position')),
            ],
            options={
                'verbose_name': 'menu',
                'verbose_name_plural': 'menu',
                'db_table': 'advert_menu',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='advert.Menu', verbose_name='menu')),
            ],
            options={
                'verbose_name': 'menu item',
                'verbose_name_plural': 'menu items',
                'db_table': 'advert_menu_item',
            },
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=2, verbose_name='language')),
                ('phrase', models.TextField(verbose_name='phrase')),
            ],
            options={
                'ordering': ('pk',),
                'db_table': 'advert_phrase',
                'verbose_name_plural': 'phrases',
                'verbose_name': 'phrase',
            },
        ),
        migrations.CreateModel(
            name='SocialAccountConfirmationQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'New'), ('success', 'Success'), ('progress', 'In progress'), ('error', 'Error')], default='new', max_length=10, verbose_name='status')),
                ('attempts', models.SmallIntegerField(default=0, verbose_name='attempts count')),
                ('last_start', models.DateTimeField(blank=True, null=True, verbose_name='last start')),
                ('social_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='advert.AdvertSocialAccount', verbose_name='social account')),
            ],
            options={
                'verbose_name': 'social account confirmation queue',
                'verbose_name_plural': 'social account confirmation queues',
                'db_table': 'advert_advert_social_account_confirmation',
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('code', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('urls', models.TextField(help_text='Valid social network hosts, one host per line', verbose_name='URLs')),
                ('patterns', models.TextField(default='', help_text='Python regexp patterns for validation, one per line. Format ^...$', verbose_name='URL patterns')),
                ('valid_pattern', models.CharField(default='', help_text='Valid url pattern of social network, uses in validation errors', max_length=255, verbose_name='Valid url pattern')),
                ('order', models.SmallIntegerField(default=0, verbose_name='order')),
            ],
            options={
                'ordering': ('order', 'pk'),
                'db_table': 'advert_social_network',
                'verbose_name_plural': 'social networks',
                'verbose_name': 'social network',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworkService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125, verbose_name='title')),
                ('social_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='advert.SocialNetwork', verbose_name='social network')),
            ],
            options={
                'ordering': ('pk',),
                'db_table': 'advert_social_network_service',
                'verbose_name_plural': 'social network services',
                'verbose_name': 'social network service',
            },
        ),
        migrations.AddField(
            model_name='advertsocialaccountservice',
            name='social_network_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_account_services', to='advert.SocialNetworkService', verbose_name='social network service'),
        ),
        migrations.AddField(
            model_name='advertsocialaccount',
            name='services',
            field=models.ManyToManyField(through='advert.AdvertSocialAccountService', to='advert.SocialNetworkService', verbose_name='service'),
        ),
        migrations.AddField(
            model_name='advertsocialaccount',
            name='social_network',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_accounts', to='advert.SocialNetwork', verbose_name='social network'),
        ),
        migrations.AddField(
            model_name='advert',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adverts', to='advert.Category', verbose_name='category'),
        ),
        migrations.AlterUniqueTogether(
            name='favoriteadvert',
            unique_together=set([('advert', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='advertsocialaccountservice',
            unique_together=set([('social_account', 'social_network_service')]),
        ),
    ]
